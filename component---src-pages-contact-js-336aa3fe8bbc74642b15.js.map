{"version":3,"sources":["webpack:///./src/pages/contact.js"],"names":["Contact","state","nameText","nameStatus","emailText","emailStatus","contactText","contactStatus","agreeStatus","textLimit","componentDidMount","script","document","createElement","src","async","body","appendChild","$","tooltip","renderButton","st","this","className","type","handleChange","e","tx","target","value","setState","length","emailInfo","match","status","render","props","location","data","site","siteMetadata","title","action","method","data-toggle","name","onChange","rows","href","id","onClick","htmlFor","data-sitekey","React","Component"],"mappings":"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","file":"component---src-pages-contact-js-336aa3fe8bbc74642b15.js","sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\n\nimport { siteMetadata } from '../../gatsby-config'\nimport Layout from 'components/layout'\nimport Meta from 'components/meta'\n\nimport '../styles/contact.scss'\n\nclass Contact extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      //text: inputのvalueを管理\n      //status: formをsubmitできるかのstatusを管理\n      nameText: '',\n      nameStatus: null,\n      emailText: '',\n      emailStatus: null,\n      contactText: '',\n      contactStatus: null,\n      agreeStatus: null,\n      textLimit: 400,\n    }\n  }\n  componentDidMount() {\n    const script = document.createElement('script')\n\n    script.src = 'https://sdk.form.run/js/v2/formrun.js'\n    script.async = true\n\n    document.body.appendChild(script)\n\n    $('[data-toggle=\"tooltip\"]').tooltip()\n  }\n  renderButton() {\n    const st = this.state\n    if (st.agreeStatus && st.emailStatus && st.nameStatus && st.contactStatus) {\n      return (\n        <button className=\"submit-btn allowed\" type=\"submit\">\n          送信\n        </button>\n      )\n    } else {\n      return (\n        <span className=\"submit-btn un-allowed d-flex justify-content-center align-items-center\">\n          送信\n        </span>\n      )\n    }\n  }\n  handleChange(e, type) {\n    const tx = e.target.value\n    switch (type) {\n      case 'name':\n        this.setState({ nameText: tx, nameStatus: tx.length > 0 })\n        break\n      case 'email':\n        const emailInfo = tx.length > 0 && tx.match(/[^\\s]@[^\\s]/)\n        const status =\n          emailInfo !== null && emailInfo !== false && emailInfo[0].length > 0\n        this.setState({ emailText: tx, emailStatus: status })\n        break\n      case 'contact':\n        this.setState({\n          contactText: tx,\n          contactStatus: tx.length > 0 && tx.length < this.state.textLimit,\n        })\n    }\n  }\n  render() {\n    const { location, data } = this.props\n    const style = {\n      position: 'absolute!important',\n      height: '1px',\n      width: '1px',\n      overflow: 'hidden',\n    }\n\n    return (\n      <Layout location={location}>\n        <Meta site={siteMetadata} title=\"Contact\" />\n        <section className=\"contact\">\n          <h2 className=\"mb-3\">\n            <span className=\"title\">お問い合わせ</span>\n            <span className=\"title-shadow\">Contact</span>\n          </h2>\n\n          <form\n            className=\"formrun px-md-5 px-sm-2 px-0 d-flex justify-content-center\"\n            action=\"https://form.run/api/v1/r/jol9epjdor5ncy1f8itqzwld\"\n            method=\"post\"\n          >\n            <div className=\"formbox-wrap pt-3\">\n              <div className=\"formbox\">\n                <div className=\"label-wrap\">\n                  <label className=\"category\">\n                    <span>お名前</span>\n                    <span className=\"badge required\">必須</span>\n                    <span\n                      className={`far fa-check-circle judge-mark check-mark\n                      ${\n                        this.state.nameStatus === null ? 'unvisible' : 'visible'\n                      }\n                      ${\n                        this.state.nameStatus === false\n                          ? 'd-none'\n                          : 'd-inline-block'\n                      }\n                      `}\n                    />\n                    <span\n                      className={`far fa-times-circle judge-mark x-mark\n                      ${\n                        this.state.nameStatus === null ? 'unvisible' : 'visible'\n                      }\n                      ${\n                        this.state.nameStatus === true\n                          ? 'd-none'\n                          : 'd-inline-block'\n                      }\n                      `}\n                      data-toggle=\"tooltip\"\n                      title=\"入力してください\"\n                    />\n                  </label>\n                </div>\n                <input\n                  name=\"client-name\"\n                  type=\"text\"\n                  onChange={e => this.handleChange(e, 'name')}\n                />\n              </div>\n              <div className=\"formbox\">\n                <div className=\"label-wrap\">\n                  <label className=\"category align-middle\">\n                    <span className=\"d-flex align-items-center\">\n                      <span>メールアドレス</span>\n                      <span className=\"badge required\">必須</span>\n                      <span\n                        className={`far fa-check-circle judge-mark check-mark\n                        ${\n                          this.state.emailStatus === null\n                            ? 'unvisible'\n                            : 'visible'\n                        }\n                        ${\n                          this.state.emailStatus === false\n                            ? 'd-none'\n                            : 'd-inline-block'\n                        }\n                        `}\n                      />\n                      <span\n                        className={`far fa-times-circle judge-mark x-mark\n                        ${\n                          this.state.emailStatus === null\n                            ? 'unvisible'\n                            : 'visible'\n                        }\n                        ${\n                          this.state.emailStatus === true\n                            ? 'd-none'\n                            : 'd-inline-block'\n                        }\n                        `}\n                        data-toggle=\"tooltip\"\n                        title=\"正しく入力してください\"\n                      />\n                    </span>\n                  </label>\n                </div>\n                <input\n                  name=\"email-addres\"\n                  type=\"text\"\n                  onChange={e => this.handleChange(e, 'email')}\n                />\n              </div>\n              <div className=\"formbox\">\n                <div className=\"label-wrap\">\n                  <label className=\"category\">\n                    <span>お問い合わせ</span>\n                    <span className=\"badge required\">必須</span>\n                    <span\n                      className={`far fa-check-circle judge-mark check-mark\n                        ${\n                          this.state.contactStatus === null\n                            ? 'unvisible'\n                            : 'visible'\n                        }\n                        ${\n                          this.state.contactStatus === false\n                            ? 'd-none'\n                            : 'd-inline-block'\n                        }\n                        `}\n                    />\n                    <span\n                      className={`far fa-times-circle judge-mark x-mark\n                        ${\n                          this.state.contactStatus === null\n                            ? 'unvisible'\n                            : 'visible'\n                        }\n                        ${\n                          this.state.contactStatus === true\n                            ? 'd-none'\n                            : 'd-inline-block'\n                        }\n                        `}\n                      data-toggle=\"tooltip\"\n                      title=\"正しく入力してください\"\n                    />\n                  </label>\n                </div>\n                <textarea\n                  rows=\"8\"\n                  name=\"contact-content\"\n                  onChange={e => this.handleChange(e, 'contact')}\n                ></textarea>\n                <div className=\"d-flex justify-content-end\">\n                  <span className=\"warning\">\n                    残り{this.state.textLimit - this.state.contactText.length}\n                    文字\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"checkbtn d-flex flex-md-row flex-column\">\n                <div className=\"label-wrap d-flex align-items-center justify-content-start\">\n                  <div className=\"checkbox-wrap d-inline-block\">\n                    <label className=\"category\">\n                      <span>個人情報利用同意</span>\n                      <a target=\"_blank\" href=\"/privacy-contact\">\n                        (お問い合わせにおける個人情報の取扱いについて)\n                      </a>\n                      <span className=\"badge required\">必須</span>\n                    </label>\n                  </div>\n                  <input\n                    className=\"d-none\"\n                    id=\"agree-checkbox\"\n                    type=\"checkbox\"\n                    onClick={() =>\n                      this.setState({ agreeStatus: !this.state.agreeStatus })\n                    }\n                  />\n                  <label\n                    className=\"agree-checkbox\"\n                    htmlFor=\"agree-checkbox\"\n                  ></label>\n                </div>\n                <div\n                  className={`warning d-flex justify-content-center align-items-center\n                    ${\n                      this.state.agreeStatus === null ||\n                      this.state.agreeStatus === true\n                        ? 'unshowed'\n                        : 'showed'\n                    }\n                    `}\n                >\n                  同意してください\n                </div>\n              </div>\n\n              {/* <div className=\"_formrun_gotcha\" style={style}>\n                <label htmlFor=\"_formrun_gotcha\">\n                  If you are a human, ignore this field\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"_formrun_gotcha\"\n                  id=\"_formrun_gotcha\"\n                  tabIndex=\"-1\"\n                />\n              </div> */}\n              <div\n                className=\"g-recaptcha\"\n                data-sitekey=\"6LdFFmkaAAAAAMN8r9Oq0JWcyR2HLBpsSobfvJ5e\"\n              ></div>\n              <div className=\"btn-wrap d-flex justify-content-end mt-4\">\n                {this.renderButton()}\n              </div>\n            </div>\n          </form>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default Contact\n"],"sourceRoot":""}